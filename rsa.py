import math
def getModInverse(a, m):
	if math.gcd(a, m) != 1:
		return None
	u1, u2, u3 = 1, 0, a
	v1, v2, v3 = 0, 1, m

	while v3 != 0:
		q = u3 // v3
		v1, v2, v3, u1, u2, u3 = (
			u1 - q * v1), (u2 - q * v2), (u3 - q * v3), v1, v2, v3
	return u1 % m

p = 12486845071738693427247285880657563831824646171675159611917701558464405456327259119333926908899840465729616002343942002689477215556473030869671629291940787
q = 9507713202824006853018246633387916367752063091489935338468852397046107765297345961101567617455479816742873156228827880421086979474228778491647759287898071
e = 65537
c =  108939654678453616174088760215732903149885203987808948863470078202999661180553761761290094797844905061396113158351302410841872578407519850047247575605178778188351806331769859422746367183132389482471063266455485501246627097810790878814045056794921807351845420984916236583641461647410952602770893908930071929869

n = p*q

phi = (p-1)*(q-1)

d = getModInverse(e, phi)

plaintext = pow(c,d,n)

print(plaintext)